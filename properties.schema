{
   "type":"object",
   "$schema": "http://json-schema.org/draft-04/schema",
   "id": "http://jsonschema.net",
   "$ref": "http://localhost/plugins/content/component/model.schema",
   "properties":{
     "_supportedLayout": {
       "type": "string",
       "required": true,
       "enum": ["full-width", "half-width", "both"],
       "default": "half-width",
       "editorOnly": true
     },
     "instruction": {
       "type": "string",
       "required": false,
       "default": "",
       "title": "Instruction",
       "inputType": "Text",
       "validators": [],
       "help": "This is the instruction text"
     },
     "_options": {
       "type":"object",
       "required":false,
       "title": "Options",
       "help": "Not required. Review property descriptions at visjs.org.",
       "properties":{
         "width": {
           "type":"string",
           "required":false,
           "default": "",
           "title": "Timeline Window Width",
           "inputType": "Text",
           "validators": [],
           "help": "A number followed by '%' or 'px', (e.g., '100%')"
         },
         "height": {
           "type":"string",
           "required":false,
           "default": "",
           "title": "Timeline Window Height",
           "inputType": "Text",
           "validators": [],
           "help": "A number followed by '%' or 'px', (e.g., '100%')"
         },
         "showCurrentTime": {
           "type":"boolean",
           "required":false,
           "default": "",
           "title": "Show Current Time",
           "inputType": {"type": "Boolean", "options": [true, false]},
           "validators": [],
           "help": "When set to 'true', a vertical line will be displayed indicating the current time"
         },
         "template": {
           "type":"string",
           "required":false,
           "default": "",
           "title": "Default Template",
           "inputType": "Asset:other",
           "validators": [],
           "help": "The name of the template (excluding the file extension) that will be applied to all items"
         },
         "align": {
           "type":"string",
           "required":false,
           "default": "auto",
           "title": "Content Alignment",
           "enum": ["auto", "center", "left", "right"],
           "inputType": {"type": "Select", "options":["auto", "center", "left", "right"]},
           "validators": [],
           "help": "Alignment of items with type 'box', 'range', and 'background'. Available values are 'auto' (default), 'center', 'left', or 'right'. For 'box' items, the 'auto' alignment is 'center'. For 'range' items, the auto alignment is dynamic: positioned left and shifted such that the contents is always visible on screen."
         }
       }
     },
     "_items-url":{
       "type": "string",
       "required": false,
       "default": "",
       "title": "External Item Data",
       "inputType": "Asset:other",
       "validators": [],
       "help": "Optional. Select a file that contains item data."
     },
     "_items": {
       "type":"array",
       "required":true,
       "title": "Items",
       "help": "At least one item is required. Review property descriptions at visjs.org.",
       "items": {
         "type": "object",
         "required": true,
         "properties":{
           "id": {
             "type":"string",
             "required":true,
             "default": "",
             "title": "Item ID",
             "inputType": "Text",
             "validators": ["required"],
             "help": "Numbers or letters that uniquely identify this item"
           },
           "content": {
             "type":"string",
             "required":true,
             "inputType": "TextArea",
             "default": "",
             "title": "Content",
             "validators": ["required"],
             "help": "Plain text or HTML that will display as the item text"
           },
           "start": {
             "type":"string",
             "required":true,
             "title": "Start",
             "inputType": "Text",
             "validators": ["required"],
             "help": "Requires a date/time format compatible with vis.js"
           },
           "end": {
             "type":"string",
             "required":false,
             "inputType": "Text",
             "default": "",
             "title": "End",
             "validators": [],
             "help": "Requires a date/time format compatible with vis.js"
           },
           "type": {
             "type":"string",
             "required":false,
             "enum": ["box", "range", "point", "background"],
             "inputType": {"type": "Select", "options":["box","range","point","background"]},
             "default": "box",
             "title": "Item Type",
             "validators": [],
             "help": "Determines the basic display type of the item"
           },
           "template": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Template",
             "inputType": "Asset:other",
             "validators": [],
             "help": "The name of the template (excluding the file extension) that will be applied to this single item"
           },
           "className": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "ClassName",
             "inputType": "Text",
             "validators": [],
             "help": "A CSS class used to style this single item"
           },
           "style": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Style",
             "inputType": "Text",
             "validators": [],
             "help": "Text for a CSS inline style to be applied to this single item"
           },
           "group": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Group",
             "inputType": "Text",
             "validators": [],
             "help": "If the Groups option is used, this specifies which group this item belongs to. Must match one of the groups specified in the Groups options"
           },
           "subgroup": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Subgroup",
             "inputType": "Text",
             "validators": [],
             "help": "Used to order items within a subgroup. Must be used in conjunction with the subgroupOrder option for Groups. Reference documentation on Visjs.org"
           },
           "title": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Tooltip Tex",
             "inputType": "Text",
             "validators": ["text"],
             "help": "Plain text that displays as a tool-tip when hovering over an item"
           }
         }
       }
     },
     "_groups-url":{
       "type": "string",
       "required": false,
       "default": "",
       "title": "External Groups Data",
       "inputType": "Asset:other",
       "validators": [],
       "help": "Optional. Select a file that contains groups data."
      },
     "_groups": {
       "type":"array",
       "required":true,
       "title": "Groups",
       "help": "Not required. Review property descriptions at visjs.org. Note: If groups are used, items will not display unless the Group ID appears in the item's Group property.",
       "items": {
         "type": "object",
         "required": false,
         "properties":{
           "id": {
             "type": "string",
             "required": true,
             "default": "",
             "title": "Group ID",
             "inputType": "Text",
             "validators": ["required"],
             "help": "Numbers or letters that uniquely identify this group. All items with this ID will be grouped together"
           },
           "content": {
             "type": "string",
             "required": true,
             "default": "",
             "title": "content",
             "inputType": "Text",
             "validators":["required"],
             "help": "Plain text or HTML that will display as the group's row header"
           },
           "className": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "ClassName",
             "inputType": "Text",
             "validators": ["text"],
             "help": "A CSS class used to style this single item"
           },
           "style": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "ClassName",
             "inputType": "Text",
             "validators": [],
             "help": "Text for a CSS inline style to be applied to this single item"
           },
           "subgroupOrder": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Subgroup Order",
             "inputType": "Text",
             "validators": [],
             "help": "By default, groups are displayed in the order in which they are entered. Change this by entering the name of an item field by which they should be sorted or by entering a custom sort function"
           },
           "title": {
             "type":"string",
             "required":false,
             "default": "",
             "title": "Tooltip Text",
             "inputType": "Text",
             "validators": ["text"],
             "help": "Plain text that displays as a tool-tip when hovering over a group"
           },
           "autoResize": {
             "type":"boolean",
             "required": false,
             "default": true,
             "title": "Auto Resize",
             "inputType": {"type": "Boolean", "options": [true, false]},
             "validators": [],
             "help": "If true, the Timeline will automatically detect when its HTML container is resized, and will redraw itself accordingly. Defaults to 'True'."
           },
           "clickToUse": {
             "type":"boolean",
             "required": false,
             "default": false,
             "title": "Click Timeline to Activate",
             "inputType": {"type": "Boolean", "options": [true, false]},
             "validators": [],
             "help": "If set to true, the Timeline will respond to mouse and touch events only after clicking on it. Defaults to false."
           },
           "dataAttributes": {
             "type":"array",
             "required": false,
             "default": "",
             "title": "Data Attributes",
             "inputType": "Text",
             "validators": [],
             "help": "An array of fields optionally defined on the Timeline items that will be appended as data- attributes to the DOM element of the items. If value is 'all' then each field defined on the Timeline item will become a data- attribute."
           },
           "end": {
             "type":"array",
             "required": false,
             "default": "",
             "title": "Range End",
             "inputType": "Text",
             "validators": [],
             "help": "The initial end date for the axis of the Timeline. If not provided, the chronologically last date present in the items set is used as end date."
           }
         }
       }
     }
   }
 }